/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer
 * to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

import org.gradle.api.tasks.TaskAction
import org.gradle.api.DefaultTask

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)
    testCompileOnly(libs.junit.jupiter)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

application {
    // Define the main class for the application.
    mainClass = "com.example.BoundingBox"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

// Configure the JAR task to create an executable JAR with a manifest
tasks.jar {
    // Set the archive file name to bounding-box.jar
    archiveFileName.set("bounding-box.jar")

    // Configure the manifest to include the Main-Class attribute
    manifest {
        attributes(
            "Main-Class" to "com.example.BoundingBox"
        )
    }

    // Include dependencies in the JAR (create a "fat" JAR)
    from({
        configurations.runtimeClasspath.get().filter { it.name.endsWith(".jar") }.map { zipTree(it) }
    })

    // Avoid duplicate files in the JAR
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.register<CreateShellScriptTask>("createShellScript") {
    outputFile.set(layout.buildDirectory.file("libs/bounding-box"))
}

// Ensure the shell script is created after the JAR
tasks.build {
    dependsOn("createShellScript")
}